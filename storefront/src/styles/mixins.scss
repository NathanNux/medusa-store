// NOTE: Viewports mixins for responsive design, improving the code and the maintenance of the project.
// --- Horizontal (landscape) breakpoints ---
$viewport-huge: 1730px;
$viewport-xl: 1598px;
$viewport-lg: 1400px;
$viewport-md: 1200px;     // Notebooks (1200px+ width, height < 850px)
$viewport-mdt: 1200px;    // iPad Pro/bigger tablets (1200px+ width, height â‰¥ 850px)
$viewport-sm: 1000px;
$viewport-xs: 750px;
$viewport-xxs: 500px;

// --- Vertical (portrait) breakpoints ---
$viewport-v-lg: 1000px;
$viewport-v-md: 600px;
$viewport-v-s: 400px;
$viewport-v-sm: 380px;
$viewport-v-xs: 320px;

// --- Mixin for horizontal (landscape) viewports ---
@mixin respond-to-h($breakpoint) {
  @if $breakpoint == huge {
    @media (min-width: #{$viewport-huge}) and (orientation: landscape) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: #{$viewport-xl}) and (max-width: #{$viewport-huge - 1}) and (orientation: landscape) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: #{$viewport-lg}) and (max-width: #{$viewport-xl - 1}) and (orientation: landscape) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: #{$viewport-md}) and (max-width: #{$viewport-lg - 1}) and (max-height: 849px) and (orientation: landscape) { @content; }
  } @else if $breakpoint == mdt {
    @media (min-width: #{$viewport-mdt}) and (max-width: #{$viewport-lg - 1}) and (min-height: 850px) and (orientation: landscape) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: #{$viewport-sm}) and (max-width: #{$viewport-md - 1}) and (orientation: landscape) { @content; }
  } @else if $breakpoint == xs {
    @media (min-width: #{$viewport-xs}) and (max-width: #{$viewport-sm - 1}) and (orientation: landscape) { @content; }
  } @else if $breakpoint == xxs {
    @media (min-width: #{$viewport-xxs}) and (max-width: #{$viewport-xs - 1}) and (orientation: landscape) { @content; }
  }
}

// --- Mixin for vertical (portrait) viewports ---
@mixin respond-to-v($breakpoint) {
  @if $breakpoint == lg {
    @media (min-width: #{$viewport-v-lg}) and (orientation: portrait) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: #{$viewport-v-md}) and (max-width: #{$viewport-v-lg - 1}) and (orientation: portrait) { @content; }
  } @else if $breakpoint == s {
    @media (min-width: #{$viewport-v-s}) and (max-width: #{$viewport-v-md - 1}) and (orientation: portrait) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: #{$viewport-v-sm}) and (max-width: #{$viewport-v-s - 1}) and (orientation: portrait) { @content; }
  } @else if $breakpoint == xs {
    @media (min-width: #{$viewport-v-xs}) and (max-width: #{$viewport-v-sm - 1}) and (orientation: portrait) { @content; }
  }
}

// --- Responsive font-size helper ---
// Usage:
// @include responsive-font("16px",
//   $h-xxs: "12px",
//   $h-xs:  "13px",
//   $h-sm:  "14px",
//   $h-md:  "15px",
//   $h-mdt: "16px",
//   $h-lg:  "18px",
//   $h-xl:  "20px",
//   $h-huge: "22px",
//   $v-xs:  "12px",
//   $v-sm:  "13px",
//   $v-s:   "14px",
//   $v-md:  "15px",
//   $v-lg:  "18px"
// );
// The mixin sets a default font-size and emits font-size overrides for the
// horizontal and vertical breakpoints only when a value is provided.
@mixin responsive-font(
  $default,
  $h-xxs: null,
  $h-xs: null,
  $h-sm: null,
  $h-md: null,
  $h-mdt: null,
  $h-lg: null,
  $h-xl: null,
  $h-huge: null,
  $v-xs: null,
  $v-sm: null,
  $v-s: null,
  $v-md: null,
  $v-lg: null
){
  // default
  font-size: $default;

  // horizontal (landscape) overrides
  @if $h-xxs != null { @include respond-to-h(xxs) { font-size: $h-xxs; } }
  @if $h-xs  != null { @include respond-to-h(xs)  { font-size: $h-xs;  } }
  @if $h-sm  != null { @include respond-to-h(sm)  { font-size: $h-sm;  } }
  @if $h-md  != null { @include respond-to-h(md)  { font-size: $h-md;  } }
  @if $h-mdt != null { @include respond-to-h(mdt) { font-size: $h-mdt; } }
  @if $h-lg  != null { @include respond-to-h(lg)  { font-size: $h-lg;  } }
  @if $h-xl  != null { @include respond-to-h(xl)  { font-size: $h-xl;  } }
  @if $h-huge!= null { @include respond-to-h(huge){ font-size: $h-huge; } }

  // vertical (portrait) overrides
  @if $v-xs != null { @include respond-to-v(xs) { font-size: $v-xs; } }
  @if $v-sm != null { @include respond-to-v(sm) { font-size: $v-sm; } }
  @if $v-s  != null { @include respond-to-v(s)  { font-size: $v-s;  } }
  @if $v-md != null { @include respond-to-v(md) { font-size: $v-md; } }
  @if $v-lg != null { @include respond-to-v(lg) { font-size: $v-lg; } }
}

// --- Named font-size tokens (single source of truth) ---
// Define your text scales here. Each token can include a `default` value
// and optional overrides for horizontal (h-*) and vertical (v-*) breakpoints.
// Values should use rem (recommended) for accessibility and scaling.
$font-scale: (
  xxl: (
    default: 6rem,
    h-lg: 4rem,
    h-md: 3.5rem,
    h-sm: 3rem,
    v-sm: 3.2rem
  ),
  lg: (
    default: 2rem,
    h-md: 1.8rem,
    h-sm: 1.6rem,
    v-sm: 1.7rem
  ),
  md: (
    default: 1.3rem,
    h-sm: 1.25rem,
    v-sm: 1.2rem
  ),
  sm: (
    default: 1.1rem,
    h-xs: 1rem,
    v-xs: 0.95rem
  ),
  xs: (
    default: 0.9rem,
    v-xs: 0.85rem
  )
);

// Helper mixin: use a named token and delegate to `responsive-font`
@mixin responsive-font-token($token) {
  $cfg: map-get($font-scale, $token);
  @if $cfg == null {
    @warn "responsive-font-token: `#{$token}` not found in $font-scale.";
  } @else {

    // extract values (map-get returns null if key absent)
    $default: map-get($cfg, default);
    $h-xxs: map-get($cfg, h-xxs);
    $h-xs:  map-get($cfg, h-xs);
    $h-sm:  map-get($cfg, h-sm);
    $h-md:  map-get($cfg, h-md);
    $h-mdt: map-get($cfg, h-mdt);
    $h-lg:  map-get($cfg, h-lg);
    $h-xl:  map-get($cfg, h-xl);
    $h-huge: map-get($cfg, h-huge);
    $v-xs:  map-get($cfg, v-xs);
    $v-sm:  map-get($cfg, v-sm);
    $v-s:   map-get($cfg, v-s);
    $v-md:  map-get($cfg, v-md);
    $v-lg:  map-get($cfg, v-lg);

    @include responsive-font(
      $default,
      $h-xxs: $h-xxs,
      $h-xs:  $h-xs,
      $h-sm:  $h-sm,
      $h-md:  $h-md,
      $h-mdt: $h-mdt,
      $h-lg:  $h-lg,
      $h-xl:  $h-xl,
      $h-huge:$h-huge,
      $v-xs:  $v-xs,
      $v-sm:  $v-sm,
      $v-s:   $v-s,
      $v-md:  $v-md,
      $v-lg:  $v-lg
    );
  }
}

// --- Usage examples ---
// .myParagraph {
//   // Use the named token 'md' from $font-scale
//   @include responsive-font-token(md);
//   line-height: 1.45;
// }
//
// // Per-instance override (if needed):
// .specialTitle {
//   @include responsive-font-token(lg);
//   // tweak only the horizontal large breakpoint for this element
//   @include respond-to-h(lg) { font-size: 3.25rem; }
// }
