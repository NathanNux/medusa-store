@use '../../../../../styles/mixins.scss' as *;

.InteractiveLinkButton{
    width: auto;
    height: auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 2px 8px var(--ButtonBorder); // subtle shadow here
    border-radius: 25px;
    .button{
        position: relative;
        width: 250px;
        height: 40px;
        cursor: pointer;
        border-radius: 25px;
        overflow: hidden;
        border: none;
        box-shadow: none;
        background-color: transparent;

        @include respond-to-v(s){
            width: 220px;
            height: 35px;
        }
        @include respond-to-v(sm){
            width: 220px;
            height: 35px;
        }
        @include respond-to-v(xs){
            width: 220px;
            height: 35px;
        }

        .slider{
            position: relative;
            width: 100%;
            height: 100%;

            .el{
                width: 100%;
                height: 100%;
                p{
                    margin: 0px;
                    color: var(--Wtext);
                    text-transform: capitalize;
                    display: flex;
                    gap: 4px;
                    font-size: 1.2rem;

                    @include respond-to-h(md) {
                        font-size: 1.1rem; /* text-2xl */
                    }
                    @include respond-to-h(sm) {
                        font-size: 1.1rem; /* text-2xl */
                    }

                    @include respond-to-h(xs) {
                        font-size: 1.1rem; /* text-2xl */
                    }
                    @include respond-to-h(xxs) {
                        font-size: 1.1rem; /* text-2xl */
                    }

                    @include respond-to-v(md) {
                        font-size: 1.1rem; /* text-2xl */
                    }

                    @include respond-to-v(s) {
                        font-size: 1.1rem; /* text-2xl */
                    }
                    @include respond-to-v(sm) {
                        font-size: 1.1rem; /* text-2xl */
                    }
                    @include respond-to-v(xs) {
                        font-size: 1.1rem; /* text-2xl */
                    }

                    &:nth-of-type(2){
                        transform: rotateX(-90deg) translateY(15px);
                    }
                }
                &:nth-of-type(2){
                    p{
                        color: var(--ChText);
                        
                    }
                }
                &:hover{
                    .perspectiveText{
                        transform: rotateX(90deg);
                        p{
                            &:nth-of-type(1){
                                transform: translateY(-100%);
                                opacity: 0;
                            }
                            &:nth-of-type(2){
                                opacity: 1;
                            }
                        }
                    }
                }
            }
        }
        
    }
}

.perspectiveText{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    transform-style: preserve-3d;
    transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    p{
        transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
        pointer-events: none;
        text-transform: capitalize;
        &:nth-of-type(2){
            position: absolute;
            transform-origin: bottom center;
            transform: rotateX(-90deg) translateY(9px);
            opacity: 0;
        }

        .arrow {
            transition: transform 0.15s cubic-bezier(0.76, 0, 0.24, 1);
            &.rotate {
            transform: rotate(45deg);
            }

            :hover {
            transform: rotate(0deg);
            }
        }
    }
}