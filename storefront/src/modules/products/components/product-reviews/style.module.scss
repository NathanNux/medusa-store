@use "../../../../styles/mixins.scss" as *;

.container {
	overflow: hidden;
    width: 100dvw;
    min-height: 50dvh;
    background-color: var(--OliveBg);
    border-top: 0.5px solid var(--ButtonBorder);
    border-bottom: 0.5px solid var(--ButtonBorder);
    padding: 10dvh 5dvw 5dvh 5dvw;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;

    .header {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin-bottom: 4rem; // mb-16
        gap: 1rem;

        .subtitle {
            font-size: 0.875rem; // text-base-regular â†’ text-sm
            line-height: 1.5rem;
            font-weight: 400;
            color: var(--Wtext); // gray-600
            margin-bottom: 1.5rem; // mb-6
        }

        .title {
            font-size: 2rem; // text-2xl-regular
            line-height: 1.2;
            font-weight: 400;
            max-width: 32rem; // max-w-lg
            margin: 0 auto;
            color: var(--Wtext);
            font-family: "Sansation-Regular";

            @include respond-to-v(lg){
                font-size: 1.8rem; // text-2xl-regular
            }
            @include respond-to-v(md){
                font-size: 1.8rem; // text-2xl-regular
            }
            @include respond-to-v(s){
                font-size: 1.6rem; // text-2xl-regular
            }
            @include respond-to-v(sm){
                font-size: 1.6rem; // text-2xl-regular
            }
            @include respond-to-v(xs){
                font-size: 1.6rem; // text-2xl-regular
            }
        }

        .starsAndCount {
            display: flex;
            column-gap: 0.5rem; // gap-x-2
            justify-content: center;
            align-items: center;

            .stars {
                display: flex;
                column-gap: 0.5rem; // gap-x-2
            }

            .count {
                font-size: 0.875rem;
                line-height: 1.5rem;
                font-weight: 400;
                color: var(--Wtext); // gray-600
            }
        }
    }

    .reviewsGrid {
        display: grid;
        grid-template-columns: 1fr;
        column-gap: 1.5rem; // gap-x-6
        row-gap: 2rem; // gap-y-8

        @media (min-width: 768px) {
            grid-template-columns: 1fr 1fr; // small:grid-cols-2
        }
    }

    .review {
        display: flex;
        flex-direction: column;
        row-gap: 0.5rem; // gap-y-2
        font-size: 0.875rem; // text-base-regular
        line-height: 1.5rem;
        font-weight: 400;

        .reviewHeader {
            display: flex;
            column-gap: 0.5rem; // gap-x-2
            align-items: center;
            color: var(--Wtext);

            .reviewStars {
                display: flex;
                column-gap: 0.25rem; // gap-x-1
            }
        }

        .reviewFooter {
            border-top: 1px solid var(--ui-border-base, #e5e7eb);
            padding-top: 1rem; // pt-4
            font-size: 0.875rem; // text-sm-regular
            line-height: 1.25rem;
            color: var(--Wtext);
        }
    }
}


.ClickButton{
    width: auto;
    height: auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;

    .button{
        position: relative;
        width: 100px;
        height: 40px;
        cursor: pointer;
        border-radius: 25px;
        overflow: hidden;
        border: none;
        box-shadow: 0 2px 10px var(--ButtonBorder);
        background-color: transparent;

        @include respond-to-v(s){
            width: 90px;
            height: 35px;
        }

        .slider{
            position: relative;
            width: 100%;
            height: 100%;

            .el{
                width: 100%;
                height: 100%;
                p{
                    margin: 0px;
                }
                &:nth-of-type(2){
                    p{
                        color: var(--Wtext);
                    }
                }
                &:hover{
                    .perspectiveText{
                        transform: rotateX(90deg);
                        p{
                            &:nth-of-type(1){
                                transform: translateY(-100%);
                                opacity: 0;
                            }
                            &:nth-of-type(2){
                                opacity: 1;
                            }
                        }
                    }
                }
            }
        }
        
    }
}

.perspectiveText{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    transform-style: preserve-3d;
    transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    p{
        transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
        pointer-events: none;
        text-transform: capitalize;
        &:nth-of-type(2){
            position: absolute;
            transform-origin: bottom center;
            transform: rotateX(-90deg) translateY(9px);
            opacity: 0;
        }
    }
}