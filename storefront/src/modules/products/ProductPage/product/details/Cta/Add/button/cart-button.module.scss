@use '../../../../../../../../styles/mixins.scss' as *;
.MButton{
    width: auto;
    height: auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    .button{
        position: relative;
        width: 200px;
        height: 45px;
        cursor: pointer;
        border-radius: 25px;
        overflow: hidden;
        border: none;
        box-shadow: none;
        background-color: var(--OButton);

        @include respond-to-h(lg){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-h(mdt){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-h(md){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-h(sm){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-h(xs){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-h(xxs){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-v(md){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-v(s){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-v(sm){
            width: 150px !important;
            height: 40px !important;
        }
        @include respond-to-v(xs){
            width: 150px !important;
            height: 40px !important;
        }

        .slider{
            position: relative;
            width: 100%;
            height: 100%;

            .el{
                width: 100%;
                height: 100%;
                background-color: var(--OButton);
                .perspectiveText{
                    justify-content: center;
                    align-items: center;
                    position: relative;
                    p{
                        text-transform: capitalize;
                        margin: 0px;
                        color: var(--Wtext);
                        font-size: 1.3rem;
                        position: absolute;
                        
                    }
                }
                &:nth-of-type(2){
                    background-color: var(--CharcoalBg);
                    p{
                        color: var(--Wtext);
                    }
                }
                &:hover{
                    .perspectiveText{
                        transform: rotateX(90deg);
                        p{
                            &:nth-of-type(1){
                                transform: translateY(-100%);
                                opacity: 0;
                            }
                            &:nth-of-type(2){
                                opacity: 1;
                                transform: rotateX(-90deg) translateY(12px);
                            }
                        }
                    }
                }
            }
        }
        
    }
}

.perspectiveText{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    transform-style: preserve-3d;
    transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    p{
        transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
        pointer-events: none;
        text-transform: uppercase;
        &:nth-of-type(2){
            position: absolute;
            transform-origin: bottom center;
            transform: rotateX(-90deg) translateY(9px);
            opacity: 0;
        }
    }
}