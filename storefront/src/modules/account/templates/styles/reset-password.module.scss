@use "../../../../styles/mixins.scss" as *;

// Styles for Reset Password page (nested SCSS)

.section {
	height: 100dvh;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding: 1rem;

	.ImageContainer{
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		overflow: hidden;
		z-index: -1;

		.Image{
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;

			img{
				width: 100%;
				height: 100%;
				object-fit: cover;
				z-index: 0;
			}

			.ImageOverlay {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background: rgba(0, 0, 0, 0.5);
				z-index: 1;
			}
		}
	}


	.formContainer{
		width: 30%;
		height: 50%;
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		gap: 1rem;
		z-index: 1;
		background-color: var(--WhiteBg);
		border-radius: 25px;
		box-shadow: 0 2px 10px var(--ButtonBorder); // subtle shadow here


		@include respond-to-h(lg){
			width: 35%;
			height: 55%;
		}
		@include respond-to-h(mdt){
			width: 35%;
			height: 55%;
		}

		@include respond-to-h(md){
			width: 40%;
			height: 60%;
		}
		@include respond-to-h(sm){
			width: 45%;
			height: 65%;
		}

		@include respond-to-h(xs){
			width: 45%;
			height: 95%;
			margin-top: 5dvh;
		}
		@include respond-to-h(xxs){
			width: 70%;
			height: 100%;
			margin-top: 5dvh;
		}

		@include respond-to-v(lg){
			width: 50%;
			height: 40%;
		}
		@include respond-to-v(md){
			width: 60%;
			height: 40%;
		}
		@include respond-to-v(s){
			width: 90%;
			height: 70%;
			padding: 0 2rem;
		}
		@include respond-to-v(sm){
			width: 90%;
			height: 70%;
			padding: 0 2rem;
		}
		@include respond-to-v(xs){
			width: 90%;
			height: 70%;
			padding: 0 2rem;
		}

		.formHeader{
			display: flex;
			flex-direction: column;
			gap: 0.5rem;
			width: 100%;
			padding: 1rem 2.5rem;
			position: relative;
			@include respond-to-v(s){
				padding: 0.5rem 0;
			}
			@include respond-to-v(sm){
				padding: 0.5rem 0;
			}
			@include respond-to-v(xs){
				padding: 0.5rem 0;
			}

			h1{
				font-size: 2rem;
				font-family: "Sansation-Regular";
				font-weight: 400;
				line-height: 1.5;
				margin: 0;

				@include respond-to-h(md){
					font-size: 1.8rem;
				}
				@include respond-to-h(sm){
					font-size: 1.8rem;
				}

				@include respond-to-h(xs){
					font-size: 1.8rem;
				}
				@include respond-to-h(xxs){
					font-size: 1.6rem;
				}
				@include respond-to-v(lg){
					font-size: 1.8rem;
				}
				@include respond-to-v(md){
					font-size: 1.8rem;
				}
				@include respond-to-v(s){
					font-size: 1.6rem;
				}
				@include respond-to-v(sm){
					font-size: 1.6rem;
				}
				@include respond-to-v(xs){
					font-size: 1.6rem;
				}
			}

			p{
				font-size: 1.1rem;
				font-family: "Sansation-Light";
				font-weight: 300;
				line-height: 1.5;
				margin: 0;

				@include respond-to-h(sm){
					font-size: 1rem;
				}
				@include respond-to-h(xs){
					font-size: 1rem;
				}
				@include respond-to-h(xxs){
					font-size: 0.9rem;
				}
				@include respond-to-v(lg){
					font-size: 1rem;
				}
				@include respond-to-v(md){
					font-size: 1rem;
				}
				@include respond-to-v(s){
					font-size: 1rem;
				}
				@include respond-to-v(sm){
					font-size: 1rem;
				}
				@include respond-to-v(xs){
					font-size: 1rem;
				}
			}
		}

		.form {
			width: 100%;
			max-width: 24rem; // ~ max-w-sm
			display: flex;
			flex-direction: column;
			align-items: center;
			row-gap: 1rem; // gap-4

			label {
				align-self: flex-start;
				font-weight: 500;
			}

			.inputWrap {
				position: relative;
				width: 100%;

				.input {
					width: 100%;
					padding: 0.5rem; // p-2
					padding-right: 2.5rem; // pr-10
					border: 1px solid #d1d5db; // gray-300
					border-radius: 0.375rem; // rounded
				}

				.toggle {
					position: absolute;
					right: 0.5rem;
					top: 50%;
					transform: translateY(-50%);
					background: transparent;
					border: none;
					padding: 0;
					cursor: pointer;
				}
			}

			.successActions {
				display: flex;
				flex-direction: column;
				row-gap: 0.5rem; // gap-2
				width: 100%;
				align-items: center;
			}
		}
	}
}

/* Local ClickButton styles */
.ClickButton{
	width: auto;
	height: auto;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;

	.button{
		position: relative;
		width: 280px;
		height: 40px;
		cursor: pointer;
		border-radius: 25px;
		overflow: hidden;
		border: none;
		box-shadow: none;
		background-color: transparent;

		@include respond-to-v(s){
			width: 150px;
			height: 35px;
		}
		@include respond-to-v(sm){
			width: 150px;
			height: 35px;
		}
		@include respond-to-v(xs){
			width: 150px;
			height: 35px;
		}

		.slider{
			position: relative;
			width: 100%;
			height: 100%;

			.el{
				width: 100%;
				height: 100%;
				p{
					margin: 0px;
					color: var(--Wtext)
				}
				&:nth-of-type(2){
					p{
						color: var(--Wtext);
					}
				}
				&:hover{
					.perspectiveText{
						transform: rotateX(90deg);
						p{
							&:nth-of-type(1){
								transform: translateY(-100%);
								opacity: 0;
							}
							&:nth-of-type(2){
								opacity: 1;
							}
						}
					}
				}
			}
		}
		
	}
}

.perspectiveText{
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	height: 100%;
	width: 100%;
	transform-style: preserve-3d;
	transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
	p{
		transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
		pointer-events: none;
		text-transform: capitalize;
		&:nth-of-type(2){
			position: absolute;
			transform-origin: bottom center;
			transform: rotateX(-90deg) translateY(9px);
			opacity: 0;
		}
	}
}
