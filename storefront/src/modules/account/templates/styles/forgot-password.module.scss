@use "../../../../styles/mixins.scss" as *;

// Styles for Forgot Password page (nested SCSS)

.section {
	height: 100dvh;
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding: 1rem;
	overflow: hidden;

	.ImageContainer{
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width: 100%;
		height: 100%;
		overflow: hidden;
		z-index: -1;

		.Image{
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			object-fit: cover;
			

			.ImageOverlay {
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				background: rgba(0, 0, 0, 0.5);
				z-index: 1;
			}

			img{
				z-index: 0;
			}
		}

	}

	.content{
		width: 40%;
		height: 60%;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		background-color: var(--WhiteBg);
		border-radius: 25px;
		box-shadow: 0 0 10px var(--ButtonBorder); // subtle shadow here

		z-index: 1;

		@include respond-to-h(lg){
			width: 45%;
			height: 60%;
		}
		@include respond-to-h(md){
			width: 45%;
			height: 65%;
		}
		@include respond-to-h(mdt){
			width: 50%;
		}
		@include respond-to-h(sm){
			width: 55%;
			height: 65%;
		}
		@include respond-to-h(xs){
			width: 65%;
			height: 85%;
			margin-top: 10dvh;
		}
		@include respond-to-h(xxs){
			width: 70%;
			height: 100%;
			margin-top: 10dvh;
		}
		@include respond-to-v(lg){
			width: 70%;
			height: 40%;
		}
		@include respond-to-v(md){
			width: 70%;
			height: 40%;
		}
		@include respond-to-v(s){
			width: 90%;
			height: 60%;
		}
		@include respond-to-v(sm){
			width: 90%;
			height: 60%;
		}
		@include respond-to-v(xs){
			width: 90%;
			height: 60%;
		}
		

		.header {
			width: 100%;
			min-height: 20dvh;
			display: flex;
			flex-direction: column;
			row-gap: 1.25rem; // gap-5
			align-items: center;
			justify-content: center;
			/* border placeholder removed (was invalid) */
			@include respond-to-v(lg){
				min-height: 5dvh;
			}
			@include respond-to-v(md){
				min-height: 5dvh;
			}
			@include respond-to-v(s){
				min-height: 5dvh;
				padding: 0 1rem;
			}
			@include respond-to-v(sm){
				min-height: 5dvh;
				padding: 0 1rem;
			}
			@include respond-to-v(xs){
				min-height: 5dvh;
				padding: 0 1rem;
			}

			.title {
				font-size: 2rem; // text-2xl
				line-height: 1.5rem;
				font-weight: 400; // font-bold
				margin: 0;
				font-family: "Sansation-Regular";
				@include respond-to-h(lg){
					font-size: 1.8rem;
				}
				@include respond-to-h(md){
					font-size: 1.8rem;
				}
				@include respond-to-h(mdt){
					font-size: 1.8rem;
				}
				@include respond-to-h(sm){
					font-size: 1.8rem;
				}
				@include respond-to-h(xs){
					font-size: 1.8rem;
				}
				@include respond-to-h(xxs){
					font-size: 1.6rem;
				}
				@include respond-to-v(md){
					font-size: 1.8rem;
				}
				@include respond-to-v(s){
					font-size: 1.8rem;
				}
				@include respond-to-v(sm){
					font-size: 1.6rem;
				}
				@include respond-to-v(xs){
					font-size: 1.6rem;
				}
			}

			.intro {
				width: 100%;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				text-align: center;
				row-gap: 0.5rem;

				p {
					font-size: 1rem;
					line-height: 1.5rem;
					font-family: "Sansation-Light";
					font-weight: 300;
					margin: 0;
					@include respond-to-h(sm){
						font-size: 0.9rem;
					}
					@include respond-to-h(xs){
						font-size: 0.8rem;
					}
					@include respond-to-h(xxs){
						font-size: 0.8rem;
					}
					@include respond-to-v(md){
						font-size: 0.9rem;
					}
					@include respond-to-v(s){
						font-size: 0.9rem;
					}
					@include respond-to-v(sm){
						font-size: 0.8rem;
					}
					@include respond-to-v(xs){
						font-size: 0.8rem;
					}
				}

				a {
					text-decoration: underline;
					font-size: 1.1rem;
					line-height: 1.5rem;
					font-weight: 400;
					font-family: "Sansation-Light";
					margin: 0;

					@include respond-to-h(sm){
						font-size: 1rem;
					}
					@include respond-to-h(xs){
						font-size: 0.9rem;
					}
					@include respond-to-h(xxs){
						font-size: 0.9rem;
					}
					@include respond-to-v(md){
						font-size: 1rem;
					}
					@include respond-to-v(s){
						font-size: 1rem;
					}
					@include respond-to-v(sm){
						font-size: 0.9rem;
					}
					@include respond-to-v(xs){
						font-size: 0.9rem;
					}
				}
			}
		}

		.formWrap {
			width: 100%;
			min-height: 30dvh;
			display: flex;
			align-items: center;
			justify-content: center;

			@include respond-to-v(lg){
				min-height: 15dvh;
			}
			@include respond-to-v(md){
				min-height: 15dvh;
			}
			@include respond-to-v(s){
				min-height: 15dvh;
			}
			@include respond-to-v(sm){
				min-height: 15dvh;
			}
			@include respond-to-v(xs){
				min-height: 15dvh;
			}


			.form {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 0.5rem; // gap-4
				width: 50%;
				max-width: 640px;
				min-width: 280px;

				label {
					align-self: flex-start;
					font-size: 1rem;
					line-height: 1.5rem;
					font-family: "Sansation-regular";
					font-weight: 400;
					margin: 0;

					@include respond-to-v(md){
						font-size: 0.9rem;
					}
					@include respond-to-v(s){
						font-size: 0.9rem;
					}
					@include respond-to-v(sm){
						font-size: 0.8rem;
					}
					@include respond-to-v(xs){
						font-size: 0.8rem;
					}
				}

				.input {
					width: 100%;
					padding: 0.5rem; // p-2
					border: 1px solid #d1d5db; // gray-300
					border-radius: 0.375rem; // rounded
					font-size: 1.1rem;
					font-family: "Sansation-Regular";
					font-weight: 300;
					@include respond-to-h(sm){
						font-size: 1rem;
					}
					@include respond-to-h(xs){
						font-size: 0.9rem;
					}
					@include respond-to-h(xxs){
						font-size: 0.8rem;
					}
					@include respond-to-v(md){
						font-size: 1rem;
					}
					@include respond-to-v(s){
						font-size: 1rem;
					}
					@include respond-to-v(sm){
						font-size: 0.9rem;
					}
					@include respond-to-v(xs){
						font-size: 0.9rem;
					}

					&::placeholder{
						font-size: 1.1rem;
						line-height: 1.5rem;
						font-family: "Sansation-Regular";
						font-weight: 300;
						@include respond-to-h(sm){
							font-size: 1rem;
						}
						@include respond-to-h(xs){
							font-size: 0.9rem;
						}
						@include respond-to-h(xxs){
							font-size: 0.8rem;
						}
						@include respond-to-v(md){
							font-size: 1rem;
						}
						@include respond-to-v(s){
							font-size: 1rem;
						}
						@include respond-to-v(sm){
							font-size: 0.9rem;
						}
						@include respond-to-v(xs){
							font-size: 0.9rem;
						}
					}
					&:focus {
						outline: none;
						border-color: none; // blue-500
					}
				}
			}
		}
	}

	@media (max-width: 768px) {
		.formWrap {
			.form {
				width: 100%;

				.input {
					width: 100%;
				}
			}
		}
	}
}

/* Local ClickButton styles for forgot password submit */
.ClickButton {
  width: auto;
  height: auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;

  .button {
    position: relative;
    width: 200px;
    height: 40px;
    cursor: pointer;
    border-radius: 25px;
    overflow: hidden;
    border: none;
    box-shadow: none;
    background-color: transparent;
	@include respond-to-h(sm){
		width: 250px;
    	height: 35px;
	}

    .slider {
      position: relative;
      width: 100%;
      height: 100%;

      .el {
        width: 100%;
        height: 100%;
		@include respond-to-v(s){
			padding: 0 0.5rem;
		}
		@include respond-to-v(sm){
			padding: 0 0.5rem;
		}
		@include respond-to-v(xs){
			padding: 0 0.5rem;
		}

        p {
          margin: 0;
		  color: var(--Wtext);
		  line-height: 1;
			@include respond-to-h(sm){
				font-size: 0.9rem;
			}
			@include respond-to-v(s){
				font-size: 0.9rem;
			}	
			@include respond-to-v(sm){
				font-size: 0.9rem;
			}
			@include respond-to-v(xs){
				font-size: 0.9rem;
			}
        }

        &:nth-of-type(2) {
          p {
            color: var(--Wtext);
          }
        }

        &:hover {
          .perspectiveText {
            transform: rotateX(90deg);

            p {
              &:nth-of-type(1) {
                transform: translateY(-100%);
                opacity: 0;
              }

              &:nth-of-type(2) {
                opacity: 1;
              }
            }
          }
        }
      }
    }
  }
}

.perspectiveText {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  transform-style: preserve-3d;
  transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);

  p {
    transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    pointer-events: none;
    text-transform: capitalize;

    &:nth-of-type(2) {
      position: absolute;
      transform-origin: bottom center;
      transform: rotateX(-90deg) translateY(15px);
      opacity: 0;
    }
  }
}