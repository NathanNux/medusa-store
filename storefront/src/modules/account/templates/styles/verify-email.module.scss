@use "../../../../styles/mixins.scss" as *;

// Styles for Verify Email page (nested SCSS)

.section {
	height: 100dvh;
	width: 100dvw;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding: 1rem; 
	overflow: hidden;

	.ImageContainer{
		z-index: 1;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		overflow: hidden;

		.Image {
			position: absolute;
			top: -10%;
			left: -10%;
			width: 120%;
			height: 120%;
			z-index: 0;
		}

		.ImageOverlay{
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: var(--CharcoalBg);
			opacity: 0.8;
			z-index: 1;
		}
	}

	.container {
		width: 40%;
		height: 60%;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		row-gap: 1rem; // gap-4
		border-radius: 25px;
		box-shadow: 0 0 10px var(--ButtonBorder); // subtle shadow here

		z-index: 2;
		background-color: var(--WhiteBg);

		@include respond-to-h(sm){
			width: 50%;
			height: 70%;
		}

		@include respond-to-h(xs){
			width: 50%;
			height: 80%;
			margin-top: 10dvh;
		}
		@include respond-to-h(xxs){
			width: 50%;
			height: 80%;
			margin-top: 10dvh;
		}

		@include respond-to-v(md){
			width: 70%;
			height: 50%;
			margin-top: 10dvh;
		}

		@include respond-to-v(s){
			width: 90%;
			height: 60%;
			margin-top: 10dvh;
		}
		@include respond-to-v(sm){
			width: 90%;
			height: 60%;
			margin-top: 10dvh;
		}
		@include respond-to-v(xs){
			width: 90%;
			height: 60%;
			margin-top: 10dvh;
		}

		.title {
			font-family: "Sansation-Regular";
			font-size: 2rem; // text-2xl
			line-height: 1.5rem;
			font-weight: 400; // font-bold
			margin: 0;

			@include respond-to-h(lg){
				font-size: 1.8rem;
			}

			@include respond-to-h(md){
				font-size: 1.8rem;
			}
			@include respond-to-h(sm){
				font-size: 1.8rem;
			}
			@include respond-to-h(xs){
				font-size: 1.8rem;
			}
			@include respond-to-h(xxs){
				font-size: 1.8rem;
			}

			@include respond-to-v(s){
				font-size: 1.6rem;
				text-align: center;
			}
			@include respond-to-v(sm){
				font-size: 1.6rem;
				text-align: center;
			}
			@include respond-to-v(xs){
				font-size: 1.6rem;
				text-align: center;
			}
		}

		.desc {
			text-align: center;
			font-family: "Sansation-Light";
			font-size: 1.1rem; // text-2xl
			line-height: 1.5rem;
			font-weight: 300; // font-bold
			margin: 0;
		}

		.actions {
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: row;
			gap: 1.5rem; // gap-2
			margin-top: 1rem; // mt-4
			width: 100%;

			.ClickButton{
				.button{
					width: 300px;
				}
			}
		}
	}
}


.LinkButton{
    width: auto;
    height: auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 2px 8px var(--ButtonBorder); // subtle shadow here
    border-radius: 25px;
    .button{
        position: relative;
        width: 200px;
        height: 40px;
        cursor: pointer;
        border-radius: 25px;
        overflow: hidden;
        border: none;
        box-shadow: none;
        background-color: transparent;

        @include respond-to-v(s){
            width: 90px;
            height: 35px;
        }

        .slider{
            position: relative;
            width: 100%;
            height: 100%;

            .el{
                width: 100%;
                height: 100%;
                p{
                    margin: 0px;
                    color: var(--Wtext);
                }
                &:nth-of-type(2){
                    p{
                        color: var(--ChText);
                    }
                }
                &:hover{
                    .perspectiveText{
                        transform: rotateX(90deg);
                        p{
                            &:nth-of-type(1){
                                transform: translateY(-100%);
                                opacity: 0;
                            }
                            &:nth-of-type(2){
                                opacity: 1;
                            }
                        }
                    }
                }
            }
        }
        
    }
}

.ClickButton{
	width: auto;
	height: auto;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;

	.button{
		position: relative;
		width: 150px;
		height: 40px;
		cursor: pointer;
		border-radius: 25px;
		overflow: hidden;
		border: none;
		box-shadow: none;
		background-color: transparent;

		@include respond-to-v(s){
			width: 150px;
			height: 35px;
		}
		@include respond-to-v(sm){
			width: 150px;
			height: 35px;
		}
		@include respond-to-v(xs){
			width: 150px;
			height: 35px;
		}

		.slider{
			position: relative;
			width: 100%;
			height: 100%;

			.el{
				width: 100%;
				height: 100%;
				p{
					margin: 0px;
					color: var(--Wtext)
				}
				&:nth-of-type(2){
					p{
						color: var(--Wtext);
					}
				}
				&:hover{
					.perspectiveText{
						transform: rotateX(90deg);
						p{
							&:nth-of-type(1){
								transform: translateY(-100%);
								opacity: 0;
							}
							&:nth-of-type(2){
								opacity: 1;
							}
						}
					}
				}
			}
		}
		
	}
}


.perspectiveText{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    transform-style: preserve-3d;
    transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    p{
        transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
        pointer-events: none;
        text-transform: capitalize;
        &:nth-of-type(2){
            position: absolute;
            transform-origin: bottom center;
            transform: rotateX(-90deg) translateY(12px);
            opacity: 0;
        }
    }
}
