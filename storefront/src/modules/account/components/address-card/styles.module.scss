@use "../../../../styles/mixins.scss" as *;

// Modal component styles
.modal {
  position: relative;
  z-index: 75;

  .backdrop {
    position: fixed;
    inset: 0;
    background: rgba(0,0,0,0.75);
    backdrop-filter: blur(6px);
    height: 100dvh;
  }

  .container {
    position: fixed;
    inset: 0;
    overflow-y: hidden;
    display: flex;
    min-height: 100dvh;
    height: 100dvh;
    justify-content: center;
    padding: 1rem;
    text-align: center;
    align-items: center;

    &.search {
      align-items: flex-start;
    }

    .panel {
      display: flex;
      flex-direction: column;
      justify-content: start;
      width: 100%;
      transform: none;
      padding: 1.25rem;
      text-align: left;
      align-items: stretch;
      transition: all 0.3s;
      max-height: 75dvh;
      height: fit-content;
      background: #fff;
      box-shadow: 0 10px 40px var(--ButtonBorder);
      border-radius: 1rem;
      border: 1px solid #e5e7eb;

        @include respond-to-v(s){
            max-height: 85dvh;
        }
        @include respond-to-v(sm){
            max-height: 85dvh;
        }
        @include respond-to-v(xs){
            max-height: 85dvh;
            
        }

      &.small {
        max-width: 28rem;
      }
      &.medium {
        max-width: 36rem;
      }
      &.large {
        max-width: 48rem;
      }
      &.transparent {
        background: transparent;
        box-shadow: none;
        border: none;
      }

      .title {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 2rem;

        @include respond-to-v(s) {
            margin-bottom: 1rem;
        }
        @include respond-to-v(sm) {
          margin-bottom: 0.5rem;
        }
        @include respond-to-v(xs) {
          margin-bottom: 0.5rem;
        }

        .modalTitleContent{
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: center;
            .modalTitle {
                margin-bottom: 0.5rem;
                font-size: 1.8rem;
                line-height: 1.25rem;
                font-weight: 300;
                font-family: "Sansation-Regular";

                @include respond-to-h(lg){
                    font-size: 1.6rem;
                }
                @include respond-to-h(md){
                    font-size: 1.6rem;
                }
                @include respond-to-h(mdt){
                    font-size: 1.6rem;
                }
                @include respond-to-h(sm){
                    font-size: 1.6rem;;
                }
                @include respond-to-h(xs){
                    font-size: 1.3rem;
                }
                @include respond-to-h(xxs){
                    font-size: 1.3rem;
                }

                @include respond-to-v(lg){
                    font-size: 1.6rem;
                }
                @include respond-to-v(md){
                    font-size: 1.6rem;
                }
                @include respond-to-v(s){
                    font-size: 1.3rem;
                }
                @include respond-to-v(sm){
                    font-size: 1.3rem;
                }
                @include respond-to-v(xs){
                    font-size: 1.3rem;
                }

            }
        }

        
        .text {
          font-size: 1.25rem;
          font-weight: 600;
        }
        .closeBtn {
          background: none;
          border: none;
          cursor: pointer;
          padding: 0;
          margin-left: 1rem;
          display: flex;
          align-items: center;
        }
      }

      .description {
        display: flex;
        font-size: 0.9rem;
        color: var(--ui-fg-base, #111827);
        align-items: center;
        justify-content: center;
        padding-top: 0.5rem;
        padding-bottom: 1rem;
        height: 100%;

        @include respond-to-h(lg){
            font-size: 1.15rem;
        }
        @include respond-to-h(md){
            font-size: 1.15rem;
        }
        @include respond-to-h(mdt){
            font-size: 1.15rem;
        }
        @include respond-to-h(sm){
            font-size: 1.15rem;
        }
        @include respond-to-h(xs){
            font-size: 1.05rem;
        }
        @include respond-to-h(xxs){
            font-size: 1.05rem;
        }

        @include respond-to-v(lg){
            font-size: 1.15rem;
        }
        @include respond-to-v(md){
            font-size: 1.15rem;
        }
        @include respond-to-v(s){
            font-size: 1.05rem;
        }
        @include respond-to-v(sm){
            font-size: 1.05rem;
        }
        @include respond-to-v(xs){
            font-size: 1.05rem;
        }
      }

      .body {
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: stretch;
        width: 100%;
        height: 100%;
        gap: 1rem;

        // NOTE: style the address form here
        .addressForm {
            display: grid;
            grid-template-columns: 1fr;
            row-gap: 0.5rem;
            width: 100%;
            height: 100%;

            .rowTwo {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            column-gap: 0.5rem;
            width: 100%;
            }

            .rowPostal {
            display: grid;
            grid-template-columns: 144px 1fr;
            column-gap: 0.5rem;
            }
        }
        
        .error {
            color: #f43f5e;
            font-size: 1rem;
            line-height: 1.25rem;
            padding-top: 0.5rem;
            padding-bottom: 0.5rem;
        }
      }

      .footer {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        gap: 1rem;

        .actionsRow {
            display: flex;
            justify-content: flex-end;
            column-gap: 0.75rem;
            margin-top: 1.5rem;
            width: 100%;
            .cancelBtn {
                width: 120px;
                cursor: pointer;
                .button{
                width: 100%;
                cursor: pointer;
                .slider{
                    .el{
                        background-color: var(--danger,  #f80e0e) !important;
                        .perspectiveText{
                            p{
                            margin-bottom: 0;
                            &:nth-of-type(2){
                                transform: rotateX(-90deg) translateY(11px);
                            }
                            }
                        }
                        }
                    }
                }
            }

            .saveBtn {
                width: 120px;
                cursor: pointer;

                .button{
                    width: 100%;
                    cursor: pointer;
                    .slider{
                        .el{
                            .perspectiveText{
                                p{
                                    margin-bottom: 0;
                                    &:nth-of-type(2){
                                        transform: rotateX(-90deg) translateY(11px);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
      }
    }
  }
}

// EditAddress component styles
.editAddress {
  .card {
    border: 1px solid #e5e7eb;
    border-radius: 0.5rem;
    padding: 1.25rem;
    min-height: 220px;
    height: 100%;
    width: 40%;
    max-width: 350px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    transition: border-color 0.2s ease-in-out;


    @include respond-to-h(lg){
        width: 50%;
        max-width: 350px;
    }
    @include respond-to-h(md){
        width: 50%;
        max-width: 350px;
    }
    @include respond-to-h(mdt){
        width: 50%;
        max-width: 350px;
    }
    @include respond-to-h(sm){
        width: 80%;
        max-width: 350px;
    }
    @include respond-to-h(xs){
        width: 80%;
        max-width: 350px;
    }
    @include respond-to-h(xxs){
        width: 80%;
        max-width: 350px;
    }

    @include respond-to-v(lg){
        width: 80%;
        max-width: 350px;
    }
    @include respond-to-v(md){
        width: 90%;
        max-width: 350px;
    }
    @include respond-to-v(s){
        width: 100%;
        max-width: 350px;
    }
    @include respond-to-v(sm){
        width: 100%;
        max-width: 350px;
    }
    @include respond-to-v(xs){
        width: 100%;
        max-width: 350px;
    }

    &.cardActive {
      border-color: #111827;
    }

    .name {
      text-align: left;
      font-size: 1rem;
      line-height: 1.5rem;
      font-weight: 600;
    }

    .company {
      font-size: 0.875rem;
      line-height: 1.25rem;
      color: var(--ui-fg-base, #111827);
    }

    .addressLines {
      display: flex;
      flex-direction: column;
      text-align: left;
      font-size: 1rem;
      line-height: 1.5rem;
      margin-top: 0.5rem;
    }

    .actions {
      display: flex;
      align-items: center;
      flex-direction: row;
      column-gap: 1rem;

      .linkBtn {
        display: flex;
        align-items: center;
      }
    }
  }

  .modalTitle {
    margin-bottom: 0.5rem;
    font-size: 1.8rem;
    line-height: 1.25rem;
    font-weight: 300;
    font-family: "Sansation-Light";
  }

  .addressForm {
    display: grid;
    grid-template-columns: 1fr;
    row-gap: 0.5rem;
    width: 100%;
    height: 100%;

    .rowTwo {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      column-gap: 0.5rem;
      width: 100%;
    }

    .rowPostal {
      display: grid;
      grid-template-columns: 144px 1fr;
      column-gap: 0.5rem;
    }
  }

  .error {
    color: #f43f5e;
    font-size: 0.875rem;
    line-height: 1.25rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }

  .btnHeight {
    height: 2.5rem;
  }
}

// Button and animation styles
.perspectiveText{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  transform-style: preserve-3d;
  transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
  p{
    transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    pointer-events: none;
    text-transform: capitalize;
    font-size: 1rem;
    gap: 1rem;
    &:nth-of-type(2){
      position: absolute;
      transform-origin: bottom center;
      transform: rotateX(-90deg) translateY(9px);
      opacity: 0;
    }

    // --- Horizontal (landscape) responsiveness ---
    @include respond-to-h(huge) {
        font-size: 1.05rem;
    }

    @include respond-to-h(xl) {
        font-size: 1rem;
    }

    @include respond-to-h(md) {
        font-size: 0.95rem;
    }

    @include respond-to-h(sm) {
        font-size: 0.95rem;
    }

    @include respond-to-h(xxs) {
        font-size: 0.9rem;
    }

    // --- Vertical (portrait) responsiveness ---
    @include respond-to-v(lg) {
        font-size: 1.05rem;
    }

    @include respond-to-v(s) {
        font-size: 0.95rem;
    }

    @include respond-to-v(sm) {
        font-size: 0.9rem;
    }

    @include respond-to-v(xs) {
        font-size: 0.85rem;
    }
  }
}

.ScrollLink{
  width: fit-content;
  height: fit-content;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  .button{
    position: relative;
    height: 35px;
    width: 120px;
    max-width: 120px;
    max-height: 40px;
    cursor: pointer;
    overflow: hidden;
    border: none;
    box-shadow: none;
    background-color: transparent;
    border: 1px solid var(--border, #e5e7eb);
    border-radius: 15px;

    &:hover{
      .slider{
        .el{
          background-color: var(--OliveBg);
        }
      }
    }

    .slider{
      position: relative;
      width: 100%;
      height: 100%;

      .el{
        width: 100%;
        height: 100%;
        transition: all 0.5s cubic-bezier(0.76, 0, 0.24, 1);
        p{
          display: flex;
          align-items: center;
          justify-content: space-evenly;
          flex-direction: row;
          margin: 0px;
          color: var(--ChText)
        }
        &:nth-of-type(2){
          p{
            color: var(--Wtext);
          }
        }
        &:hover{
          .perspectiveText{
            transform: rotateX(90deg);
            p{
                &:nth-of-type(1){
                  transform: translateY(-100%);
                  opacity: 0;
                }
                &:nth-of-type(2){
                  opacity: 1;
                  transform: rotateX(-90deg) translateY(11px);
                  color: var(--Wtext);
                }
            }
          }
        }
      }
    }

  }
}

.ClickButton{
  width: auto;
  height: auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  .button{
      position: relative;
      width: 100%;
      max-width: 280px;
      height: 40px;
      cursor: pointer;
      border-radius: 25px;
      overflow: hidden;
      border: none;
      box-shadow: none;
      background-color: transparent;

      .slider{
          position: relative;
          width: 100%;
          height: 100%;

          .el{
              width: 100%;
              height: 100%;
              p{
                  margin: 0px;
                  color: var(--Wtext)
              }
              &:nth-of-type(2){
                  p{
                      color: var(--Wtext);
                  }
              }
              &:hover{
                  .perspectiveText{
                      transform: rotateX(90deg);
                      p{
                          &:nth-of-type(1){
                              transform: translateY(-100%);
                              opacity: 0;
                          }
                          &:nth-of-type(2){
                              opacity: 1;
                          }
                      }
                  }
              }
          }
      }

  }
}

.deleteModal {
  position: absolute;
  inset: 0;
  z-index: 1050;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 80dvh;
  width: 100%;

    @include respond-to-v(s) {
        position: fixed;
        height: 100dvh;
        padding: 0 5vw;
    }
    @include respond-to-v(sm) {
        position: fixed;
        height: 100dvh;
        padding: 0 5vw;
    }
    @include respond-to-v(xs) {
        position: fixed;
        height: 100dvh;
        padding: 0 5vw;
    }
  .modal {
    background: #fff;
    padding: 1.5rem;
    border-radius: 0.5rem;
    box-shadow: 0 2px 8px var(--ButtonBorder);

    h2 {
      font-size: 1.125rem;
      font-weight: 600;
      margin-bottom: 1rem;
    }
    p {
      margin-bottom: 1rem;
    }
    .modalActions {
      margin-top: 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
      .deleteBtn {
        cursor: pointer;
        width: 150px;
        .button{
          width: 100%;
          cursor: pointer;
          .slider{
            .el{
              background-color: var(--danger,  #f80e0e) !important;
              .perspectiveText{
                p{
                  margin-bottom: 0;
                  &:nth-of-type(2){
                    transform: rotateX(-90deg) translateY(11px);
                  }
                }
              }
            }
          }
        }
      }
      .cancelBtn {
        cursor: pointer;
        width: 120px;
        .button{
          width: 100%;
          cursor: pointer;
          .slider{
            .el{
              .perspectiveText{
                p{
                  margin-bottom: 0;
                  &:nth-of-type(2){
                    transform: rotateX(-90deg) translateY(11px);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
