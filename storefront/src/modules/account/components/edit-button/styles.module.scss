@use '../../../../styles/mixins.scss' as *;

.ClickButton{
    width: auto;
    height: auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;

    .button{
        position: relative;
        min-width: 80px;
        height: 40px;
        cursor: pointer;
        border-radius: 25px;
        overflow: hidden;
        border: none;
        box-shadow: none;
        background-color: transparent;


        @include respond-to-h(md){
            min-width: 60px;
            height: 35px;
        }
        @include respond-to-h(mdt){
            min-width: 60px;
            height: 35px;
        }
        @include respond-to-h(sm){
            min-width: 60px;
            height: 35px;
        }
        @include respond-to-h(xs){
             min-width: 60px;
            height: 35px;
        }
        @include respond-to-h(xxs){
             min-width: 60px;
            height: 35px;
        }

        @include respond-to-v(lg){
            min-width: 60px;
            height: 35px;
        }
        @include respond-to-v(md){
            min-width: 60px;
            height: 35px;
        }
        @include respond-to-v(s){
            min-width: 60px;
            height: 35px;
        }
        @include respond-to-v(sm){
            min-width: 60px;
            height: 35px;
        }
        @include respond-to-v(xs){
            min-width: 60px;
            height: 35px;
        }

        .slider{
            position: relative;
            width: 100%;
            height: 100%;

            .el{
                width: 100%;
                height: 100%;
                padding: 0 1rem;
                p{
                    color: var(--Wtext);
                    margin: 0px;

                    font-size: 1rem;

                    @include respond-to-h(lg){
                        font-size: 0.95rem;
                    }
                    @include respond-to-h(md){
                        font-size: 0.95rem;
                    }
                    @include respond-to-h(mdt){
                        font-size: 0.95rem;
                    }
                    @include respond-to-h(sm){
                        font-size: 0.95rem;
                    }
                    @include respond-to-h(xs){
                    font-size: 0.9rem;
                    }
                    @include respond-to-h(xxs){
                    font-size: 0.9rem;
                    }

                    @include respond-to-v(lg){
                    font-size: 0.95rem;
                    }
                    @include respond-to-v(md){
                    font-size: 0.95rem;
                    }
                    @include respond-to-v(s){
                    font-size: 0.9rem;
                    }
                    @include respond-to-v(sm){
                    font-size: 0.9rem;
                    }
                    @include respond-to-v(xs){
                    font-size: 0.9rem;
                    }
                }
                &:nth-of-type(2){
                    p{
                        color: var(--Wtext);
                    }
                }
                &:hover{
                    .perspectiveText{
                        transform: rotateX(90deg);
                        p{
                            &:nth-of-type(1){
                                transform: translateY(-100%);
                                opacity: 0;
                            }
                            &:nth-of-type(2){
                                opacity: 1;
                            }
                        }
                    }
                }
            }
        }
        
    }
}

.perspectiveText{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    transform-style: preserve-3d;
    transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    p{
        transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
        pointer-events: none;
        text-transform: capitalize;
        &:nth-of-type(2){
            position: absolute;
            transform-origin: bottom center;
            transform: rotateX(-90deg) translateY(9px);
            opacity: 0;
        }
    }
}