@use "../../../../styles/mixins.scss" as *;

.root {
  // Main container

  .mobileNav {
    @media (min-width: 550px) {
      display: none;
    }
    // Mobile nav styles
    .container {
      .header {
        padding-bottom: 1rem;
        h3 {
          font-size: 2rem;
          font-weight: 400;
          font-family: "Sansation-Light";
          margin: 0;

          @include respond-to-h(lg){
            font-size: 1.8rem;
          }
          @include respond-to-h(md){
            font-size: 1.8rem;
          }
          @include respond-to-h(mdt){
            font-size: 1.8rem;
          }
          @include respond-to-h(sm){
            font-size: 1.8rem;
          }
          @include respond-to-h(xs){
            font-size: 1.6rem;
          }
          @include respond-to-h(xxs){
            font-size: 1.6rem;
          }

          @include respond-to-v(lg){
            font-size: 1.8rem;
          }
          @include respond-to-v(md){
            font-size: 1.8rem;
          }
          @include respond-to-v(s){
            font-size: 1.6rem;
          }
          @include respond-to-v(sm){
            font-size: 1.6rem;
          }
          @include respond-to-v(xs){
            font-size: 1.6rem;
          }
        }
      }
      .navList {
        font-size: 1rem;
        ul {
          display: flex;
          flex-direction: column;
          margin-bottom: 0;
          justify-content: flex-start;
          align-items: flex-start;
          list-style: none;
          padding: 0;
          gap: 1rem;
          .links {
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-direction: row;
            width: 100%;
            padding: 0 2.5vw;
            li {
              cursor: pointer;
              .Link {
                font-size: 1.1rem;
                font-weight: 400;
                font-family: "Sansation-Light";
                margin: 0;
                color: var(--ChText);
                cursor: pointer;
                opacity: 0.8;

                @include respond-to-h(lg){
                  font-size: 1.05rem;
                }
                @include respond-to-h(md){
                  font-size: 1.05rem;
                }
                @include respond-to-h(mdt){
                  font-size: 1.05rem;
                }
                @include respond-to-h(sm){
                  font-size: 1.05rem;
                }
                @include respond-to-h(xs){
                  font-size: 1rem;
                }
                @include respond-to-h(xxs){
                  font-size: 1rem;
                }

                @include respond-to-v(lg){
                  font-size: 1.05rem;
                }
                @include respond-to-v(md){
                  font-size: 1.05rem;
                }
                @include respond-to-v(s){
                  font-size: 1rem;
                }
                @include respond-to-v(sm){
                  font-size: 1rem;
                }
                @include respond-to-v(xs){
                  font-size: 1rem;
                }
                color: var(--ChText);
                &:hover {
                  color: var(--ChText);
                  opacity: 1;
                }
                &.active {
                  color: var(--ChText);
                  opacity: 1;
                  font-weight: 400;
                  font-family: "Sansation-regular";
                }
              }
              .logoutBtn {
                cursor: pointer !important;
                width: 120px;
                margin-top: 0.5rem;

                /* Make sure the inner ClickButton fills this wrapper and shows pointer */
                .button{
                  width: 100%;
                  cursor: pointer;
                  .slider{
                    .el{
                      .perspectiveText{
                        p{
                          &:nth-of-type(2){
                            transform: rotateX(-90deg) translateY(11px);
                          }
                        }
                      }
                    }
                  }
                }
              }
              .deleteAccountBtn {
                cursor: pointer !important;
                width: 150px;
                margin-top: 0.5rem;
                /* Forward sizing and cursor to inner button for consistent hit area */
                .button{
                  width: 100%;
                  cursor: pointer;
                  .slider{
                    .el{
                      background-color: var(--danger,  #f80e0e) !important;
                      .perspectiveText{
                        p{
                          &:nth-of-type(2){
                            transform: rotateX(-90deg) translateY(11px);
                          }
                        }
                      }
                    }
                  }
                }
              }
              .deleteAccountModal {
                position: absolute;
                inset: 0;
                z-index: 1050;
                display: flex;
                align-items: center;
                justify-content: center;
                height: 80dvh;
                width: 100%;

                @include respond-to-v(s) {
                  position: fixed;
                  height: 100dvh;
                  padding: 0 5vw;
                }
                @include respond-to-v(sm) {
                  position: fixed;
                  height: 100dvh;
                  padding: 0 5vw;
                }
                @include respond-to-v(xs) {
                  position: fixed;
                  height: 100dvh;
                  padding: 0 5vw;
                }
                .modal {
                  background: #fff;
                  padding: 1.5rem;
                  border-radius: 0.5rem;
                  box-shadow: 0 2px 8px var(--ButtonBorder); // subtle shadow here

                  h2 {
                    font-size: 1.125rem;
                    font-weight: 600;
                    margin-bottom: 1rem;
                  }
                  p {
                    margin-bottom: 1rem;
                  }
                  .modalActions {
                    margin-top: 1rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 0.5rem;
                    .deleteBtn {
                      cursor: pointer;
                      width: 150px;
                      .button{
                        width: 100%;
                        cursor: pointer;
                        .slider{
                          .el{
                            background-color: var(--danger,  #f80e0e) !important;
                            .perspectiveText{
                              p{
                                margin-bottom: 0;
                                &:nth-of-type(2){
                                  transform: rotateX(-90deg) translateY(11px);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    .cancelBtn {
                      cursor: pointer;
                      width: 120px;
                      .button{
                        width: 100%;
                        cursor: pointer;
                        .slider{
                          .el{
                            .perspectiveText{
                              p{
                                margin-bottom: 0;
                                &:nth-of-type(2){
                                  transform: rotateX(-90deg) translateY(11px);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }

          .actions{
            display: flex;
            align-items: center;
            justify-content: flex-start;
            flex-direction: row-reverse;
            gap: 1rem;
            width: 100%;
            padding: 0 2.5vw;
            li {
              cursor: pointer;
              .Link {
                font-size: 1.1rem;
                font-weight: 400;
                font-family: "Sansation-Light";
                margin: 0;
                color: var(--ChText);
                cursor: pointer;
                opacity: 0.8;

                @include respond-to-h(lg){
                  font-size: 1.05rem;
                }
                @include respond-to-h(md){
                  font-size: 1.05rem;
                }
                @include respond-to-h(mdt){
                  font-size: 1.05rem;
                }
                @include respond-to-h(sm){
                  font-size: 1.05rem;
                }
                @include respond-to-h(xs){
                  font-size: 1rem;
                }
                @include respond-to-h(xxs){
                  font-size: 1rem;
                }

                @include respond-to-v(lg){
                  font-size: 1.05rem;
                }
                @include respond-to-v(md){
                  font-size: 1.05rem;
                }
                @include respond-to-v(s){
                  font-size: 1rem;
                }
                @include respond-to-v(sm){
                  font-size: 1rem;
                }
                @include respond-to-v(xs){
                  font-size: 1rem;
                }
                color: var(--ChText);
                &:hover {
                  color: var(--ChText);
                  opacity: 1;
                }
                &.active {
                  color: var(--ChText);
                  opacity: 1;
                  font-weight: 400;
                  font-family: "Sansation-regular";
                }

                .button{
                  width: 50px;
                  .slider{
                    .el{
                      background-color: var(--CreamDetails);
                    }
                  }
                }
              }
              .logoutBtn {
                cursor: pointer !important;
                width: 50px;
                margin-top: 0.5rem;

                /* Make sure the inner ClickButton fills this wrapper and shows pointer */
                .button{
                  width: 100%;
                  cursor: pointer;
                  .slider{
                    .el{
                      .perspectiveText{
                        p{
                          &:nth-of-type(2){
                            transform: rotateX(-90deg) translateY(11px);
                          }
                        }
                      }
                    }
                  }
                }
              }
              .deleteAccountBtn {
                cursor: pointer !important;
                width: 50px;
                margin-top: 0.5rem;
                /* Forward sizing and cursor to inner button for consistent hit area */
                .button{
                  width: 100%;
                  cursor: pointer;
                  .slider{
                    .el{
                      background-color: var(--danger,  #f80e0e) !important;
                      .perspectiveText{
                        p{
                          &:nth-of-type(2){
                            transform: rotateX(-90deg) translateY(11px);
                          }
                        }
                      }
                    }
                  }
                }
              }
              .deleteAccountModal {
                position: absolute;
                inset: 0;
                z-index: 1050;
                display: flex;
                align-items: center;
                justify-content: center;
                height: 80dvh;
                width: 100%;

                @include respond-to-v(s) {
                  position: fixed;
                  height: 100dvh;
                  padding: 0 5vw;
                }
                @include respond-to-v(sm) {
                  position: fixed;
                  height: 100dvh;
                  padding: 0 5vw;
                }
                @include respond-to-v(xs) {
                  position: fixed;
                  height: 100dvh;
                  padding: 0 5vw;
                }
                .modal {
                  background: #fff;
                  padding: 1.5rem;
                  border-radius: 0.5rem;
                  box-shadow: 0 2px 8px var(--ButtonBorder); // subtle shadow here

                  h2 {
                    font-size: 1.125rem;
                    font-weight: 600;
                    margin-bottom: 1rem;
                  }
                  p {
                    margin-bottom: 1rem;
                  }
                  .modalActions {
                    margin-top: 1rem;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    gap: 0.5rem;
                    .deleteBtn {
                      cursor: pointer;
                      width: 150px;
                      .button{
                        width: 100%;
                        cursor: pointer;
                        .slider{
                          .el{
                            background-color: var(--danger,  #f80e0e) !important;
                            .perspectiveText{
                              p{
                                margin-bottom: 0;
                                &:nth-of-type(2){
                                  transform: rotateX(-90deg) translateY(11px);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    .cancelBtn {
                      cursor: pointer;
                      width: 120px;
                      .button{
                        width: 100%;
                        cursor: pointer;
                        .slider{
                          .el{
                            .perspectiveText{
                              p{
                                margin-bottom: 0;
                                &:nth-of-type(2){
                                  transform: rotateX(-90deg) translateY(11px);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  .desktopNav {
    display: none;
    @media (min-width: 550px) {
      display: block;
    }
    .container {
      .header {
        padding-bottom: 1rem;
        h3 {
          font-size: 2rem;
          font-weight: 400;
          font-family: "Sansation-Light";
          margin: 0;

          @include respond-to-h(lg){
            font-size: 1.8rem;
          }
          @include respond-to-h(md){
            font-size: 1.8rem;
          }
          @include respond-to-h(mdt){
            font-size: 1.8rem;
          }
          @include respond-to-h(sm){
            font-size: 1.8rem;
          }
          @include respond-to-h(xs){
            font-size: 1.6rem;
          }
          @include respond-to-h(xxs){
            font-size: 1.6rem;
          }

          @include respond-to-v(lg){
            font-size: 1.8rem;
          }
          @include respond-to-v(md){
            font-size: 1.8rem;
          }
          @include respond-to-v(s){
            font-size: 1.6rem;
          }
          @include respond-to-v(sm){
            font-size: 1.6rem;
          }
          @include respond-to-v(xs){
            font-size: 1.6rem;
          }
        }
      }
      .navList {
        font-size: 1rem;
        ul {
          display: flex;
          flex-direction: column;
          margin-bottom: 0;
          justify-content: flex-start;
          align-items: flex-start;
          list-style: none;
          padding: 0;
          li {
            cursor: pointer;
            .Link {
              font-size: 1.1rem;
              font-weight: 400;
              font-family: "Sansation-Light";
              margin: 0;
              color: var(--ChText);
              cursor: pointer;
              opacity: 0.8;

              @include respond-to-h(lg){
                font-size: 1.05rem;
              }
              @include respond-to-h(md){
                font-size: 1.05rem;
              }
              @include respond-to-h(mdt){
                font-size: 1.05rem;
              }
              @include respond-to-h(sm){
                font-size: 1.05rem;
              }
              @include respond-to-h(xs){
                font-size: 1rem;
              }
              @include respond-to-h(xxs){
                font-size: 1rem;
              }

              @include respond-to-v(lg){
                font-size: 1.05rem;
              }
              @include respond-to-v(md){
                font-size: 1.05rem;
              }
              @include respond-to-v(s){
                font-size: 1rem;
              }
              @include respond-to-v(sm){
                font-size: 1rem;
              }
              @include respond-to-v(xs){
                font-size: 1rem;
              }
              color: var(--ChText);
              &:hover {
                color: var(--ChText);
                opacity: 1;
              }
              &.active {
                color: var(--ChText);
                opacity: 1;
                font-weight: 400;
                font-family: "Sansation-regular";
              }
            }
            .logoutBtn {
              cursor: pointer !important;
              width: 120px;
              margin-top: 0.5rem;

              /* Make sure the inner ClickButton fills this wrapper and shows pointer */
              .button{
                width: 100%;
                cursor: pointer;
                .slider{
                  .el{
                    .perspectiveText{
                      p{
                        &:nth-of-type(2){
                          transform: rotateX(-90deg) translateY(11px);
                        }
                      }
                    }
                  }
                }
              }
            }
            .deleteAccountBtn {
              cursor: pointer !important;
              width: 150px;
              margin-top: 0.5rem;
              /* Forward sizing and cursor to inner button for consistent hit area */
              .button{
                width: 100%;
                cursor: pointer;
                .slider{
                  .el{
                    background-color: var(--danger,  #f80e0e) !important;
                    .perspectiveText{
                      p{
                        &:nth-of-type(2){
                          transform: rotateX(-90deg) translateY(11px);
                        }
                      }
                    }
                  }
                }
              }
            }
            .deleteAccountModal {
              position: absolute;
              inset: 0;
              z-index: 1050;
              display: flex;
              align-items: center;
              justify-content: center;
              height: 80dvh;
              width: 100%;

              @include respond-to-v(s) {
                position: fixed;
                height: 100dvh;
                padding: 0 5vw;
              }
              @include respond-to-v(sm) {
                position: fixed;
                height: 100dvh;
                padding: 0 5vw;
              }
              @include respond-to-v(xs) {
                position: fixed;
                height: 100dvh;
                padding: 0 5vw;
              }
              .modal {
                background: #fff;
                padding: 1.5rem;
                border-radius: 0.5rem;
                box-shadow: 0 2px 8px var(--ButtonBorder); // subtle shadow here

                h2 {
                  font-size: 1.125rem;
                  font-weight: 600;
                  margin-bottom: 1rem;
                }
                p {
                  margin-bottom: 1rem;
                }
                .modalActions {
                  margin-top: 1rem;
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  gap: 0.5rem;
                  .deleteBtn {
                    cursor: pointer;
                    width: 150px;
                    .button{
                      width: 100%;
                      cursor: pointer;
                      .slider{
                        .el{
                          background-color: var(--danger,  #f80e0e) !important;
                          .perspectiveText{
                            p{
                              margin-bottom: 0;
                              &:nth-of-type(2){
                                transform: rotateX(-90deg) translateY(11px);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  .cancelBtn {
                    cursor: pointer;
                    width: 120px;
                    .button{
                      width: 100%;
                      cursor: pointer;
                      .slider{
                        .el{
                          .perspectiveText{
                            p{
                              margin-bottom: 0;
                              &:nth-of-type(2){
                                transform: rotateX(-90deg) translateY(11px);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}


.ClickButton{
  width: auto;
  height: auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  .button{
      position: relative;
      /* make button size follow its container but keep a sensible max */
      width: 100%;
      max-width: 280px;
      height: 40px;
      cursor: pointer;
      border-radius: 25px;
      overflow: hidden;
      border: none;
      box-shadow: none;
      background-color: transparent;

      .slider{
          position: relative;
          width: 100%;
          height: 100%;

          .el{
              width: 100%;
              height: 100%;
              p{
                  margin: 0px;
                  color: var(--Wtext)
              }
              &:nth-of-type(2){
                  p{
                      color: var(--Wtext);
                  }
              }
              &:hover{
                  .perspectiveText{
                      transform: rotateX(90deg);
                      p{
                          &:nth-of-type(1){
                              transform: translateY(-100%);
                              opacity: 0;
                          }
                          &:nth-of-type(2){
                              opacity: 1;
                          }
                      }
                  }
              }
          }
      }
      
  }
}

.perspectiveText{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  transform-style: preserve-3d;
  transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
  p{
    transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
    pointer-events: none;
    text-transform: capitalize;
    font-size: 1rem;
    &:nth-of-type(2){
      position: absolute;
      transform-origin: bottom center;
      transform: rotateX(-90deg) translateY(9px);
      opacity: 0;
    }

    // --- Horizontal (landscape) responsiveness ---
    @include respond-to-h(huge) {
        font-size: 1.05rem;
    }

    @include respond-to-h(xl) {
        font-size: 1rem;
    }

    @include respond-to-h(md) {
        font-size: 0.95rem;
    }

    @include respond-to-h(sm) {
        font-size: 0.95rem;
    }

    @include respond-to-h(xs) {
        font-size: 0.9rem;
    }
    @include respond-to-h(xxs) {
        font-size: 0.9rem;
    }

    // --- Vertical (portrait) responsiveness ---
    @include respond-to-v(lg) {
        font-size: 1.05rem;
    }

    @include respond-to-v(s) {
        font-size: 0.95rem;
    }

    @include respond-to-v(sm) {
        font-size: 0.9rem;
    }

    @include respond-to-v(xs) {
        font-size: 0.85rem;
    }
  }
}

.ScrollLink{
  width: auto;
  height: auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  .button{
    position: relative;
    width: 100%;
    max-width: 280px;
    height: 40px;
    cursor: pointer;
    overflow: hidden;
    border: none;
    box-shadow: none;
    background-color: transparent;

    .slider{
      position: relative;
      width: 100%;
      height: 100%;

      .el{
        width: 100%;
        height: 100%;
        p{
          margin: 0px;
          color: var(--Wtext)
        }
        &:nth-of-type(2){
          p{
            color: var(--Wtext);
          }
        }
        &:hover{
          .perspectiveText{
            transform: rotateX(90deg);
            p{
                &:nth-of-type(1){
                  transform: translateY(-100%);
                  opacity: 0;
                }
                &:nth-of-type(2){
                  opacity: 1;
                  transform: rotateX(-90deg) translateY(11px);
                }
            }
          }
        }
      }
    }
      
  }

  &.active {
    .button .slider .el p {
      color: var(--ChText);
      font-weight: 400;
      font-family: "Sansation-regular";
    }
  }
}

.ScrollLinkMobile{
  width: auto;
  height: auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  .button{
    position: relative;
    width: 50px;
    height: 40px;
    cursor: pointer;
    overflow: hidden;
    border: none;
    box-shadow: none;
    background-color: transparent;
    border-radius: 25px;



    .slider{
      position: relative;
      width: 100%;
      height: 100%;

      .el{
        width: 100%;
        height: 100%;
        background-color: var(--CreamDetails);
        p{
          margin: 0px;
          color: var(--Wtext)
        }
        &:nth-of-type(2){
          p{
            color: var(--Wtext);
          }
        }
        &:hover{
          .perspectiveText{
            transform: rotateX(90deg);
            p{
              &:nth-of-type(1){
                transform: translateY(-100%);
                opacity: 0;
              }
              &:nth-of-type(2){
                opacity: 1;
                transform: rotateX(-90deg) translateY(11px);
              }
            }
          }
        }
      }
    }
      
  }

  &.active {
    .button {
      box-shadow: 0 0 0 2px var(--Placeholder);
        .slider .el p {
        color: var(--ChText);
        font-weight: 400;
        font-family: "Sansation-regular";
      }
    }
  }
}

