@use "../../../../styles/mixins.scss" as *;

/* Payment Button styles using nested Sass structure */

.root {
  display: block;

  /* Primary button styles */
  .button {
    min-width: 12rem; /* visual stability */
  }

  /* Error message wrapper spacing */
  .errorWrap {
    margin-top: 0.5rem; /* 8px */
  }

  /* Variant hook if needed later */
  .comgate {
    /* reserved for provider-specific tweaks */
    min-height: 1px;
  }
}


.ClickButton{
  width: auto;
  height: auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;

  .button{
    position: relative;
    width: 250px;
    height: 40px;
    cursor: pointer;
    border-radius: 25px;
    overflow: hidden;
    border: none;
    box-shadow: 0 2px 8px var(--ButtonBorder); // subtle shadow here
    background-color: transparent;

    @include respond-to-v(s){
        width: 90px;
        height: 35px;
    }

    .slider{
        position: relative;
        width: 100%;
        height: 100%;

        .el{
            width: 100%;
            height: 100%;
            p{
              margin: 0px;
              font-size: 0.9rem;
              color: var(--Wtext);
            }
            &:nth-of-type(2){
                p{
                  color: var(--Wtext);
                }
            }
            &:hover{
                .perspectiveText{
                    transform: rotateX(90deg);
                    p{
                        &:nth-of-type(1){
                            transform: translateY(-100%);
                            opacity: 0;
                        }
                        &:nth-of-type(2){
                            opacity: 1;
                        }
                    }
                }
            }
        }
    }
      
  }
}

.perspectiveText{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  transform-style: preserve-3d;
  transition: transform 0.75s cubic-bezier(0.76, 0, 0.24, 1);
  p{
      transition: all 0.75s cubic-bezier(0.76, 0, 0.24, 1);
      pointer-events: none;
      text-transform: capitalize;
      &:nth-of-type(2){
          position: absolute;
          transform-origin: bottom center;
          transform: rotateX(-90deg) translateY(10px);
          opacity: 0;
      }
  }
}